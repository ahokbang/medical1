'''
[클래스]
클래스의 개념 # 사용자정의
- 클래스의 모양과 생성
calss 클래스명 :
    # 이 부분에

- 현실세계의 ...... 구현하려고 고안된 개념
  
- 자동차를 클래스로 구현  
class 자동차:
    # 자동차의 속성 # => 변수로 표현
        색상
        속도
    # 자동차의 기능 # => 함수로 표현
        속도 올리기()
        속도 내리기()

- 목적: 코드의 재사용 및 보안         
        
- 인스턴스 생성 코드(= 객체선언) # 인스턴스=객체 : 변수 선언인데 클래스에서는 객체 선언
myCar1 = Car()

- 호출하는 방법; 클래스 내부에 있는 변수를 적고
myCar1.color = "빨강"
myCar.speed = 0


- 메서드의 호출; 매개변수는 없으면 안 넣어도 됨
myCar1.upSpeed(30)

- 함수와 클래스는 형태가 비슷함. 구분할 수 있는 방법은 클래스의 경우 첫글자가 대문자
단, 클래스의 첫글자가 소문자이어도 에러가 나지는 않아. 함수는 무조건 ()가 있어. 

[생성자]
- 생성자의 개념 :  인스턴스를 생성하면서 필드값을 초기화시키는 함수
- 생성자의 기본
    - 생성자의 기본 형태 : __init__()
                            이 부분에 초기화할 코드 입력
        - init : initialize의 약자로 초기화의 의미
        - 언더바 2개(__) : 파이썬에서 예약해놓은 것.
        - 프로그램을 작성 시 이 이르을 사용해서 새로운 함수나 변수명을 만들지 말 것
self: '밖의 (class의 )변수에 값을 집어 넣어라'는 뜻

클래스변수는 저장공간이 하나라서 각 클래스 내에서 변수값이 변하더라도 전체가 변경
==> 이름을 달리해도 적용됨. 참조변수명.클래스변수명으로 쓰지마. 클래스명.클래스변수명으로 작성

[인스턴스 변수]
- 공통으로 사용하지 않음

[클래스 변수]
- 공통으로 사용

[클래스의 상속]
- 상속의 개념: 기존 클래스에 있는 필드와 메서드를 그대로 물려받는 새로운 클래스를 만드는 것 
              잘 사용하지 않음. 히스토리 관리 필요
              부모의 것을 바꾸면 자식의 것도 바뀌게 되므로 상속보다는 객체 선언해서 사용 권장
              예) window 창, 인터넷창, 메모장창 등
                      
'''